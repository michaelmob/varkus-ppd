server {
	listen 80;
	listen 443 ssl http2;
	server_name <%= domain.name %> insecure.<%= domain.name %>;

	root /viking;
	index index.html;

	# SSL
	ssl on;
	ssl_certificate <%= domain.chained_cert_path %>;
	ssl_certificate_key <%= domain.key_path %>;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_session_cache shared:SSL:50m;
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
	ssl_prefer_server_ciphers on;
	ssl_dhparam <%= dhparam_path %>;

	client_max_body_size 500m;
	error_page 500 502 503 504 = /500.html;

	# 500 Error Pages
	location = /500.html {
		root /viking/static/errors;
	}

	# Robots.txt
	location /robots.txt {
		root /viking/static;
	}

	# Static
	location /static/ {
		autoindex off;
	}

	# Media
	location /media/ {
		autoindex off;
	}

	# Protected Media Files
	location /media/files/ {
		internal;
	}

	# Websocket Reverse Proxy
	location /ws/ {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Real-IP $remote_addr;
		proxy_pass <%= domain.upstream %>;
	}

	# Django Reverse Proxy
	location / {
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_redirect off;
		proxy_connect_timeout 60;
		proxy_read_timeout 60;
		proxy_pass <%= domain.upstream %>;
	}
}